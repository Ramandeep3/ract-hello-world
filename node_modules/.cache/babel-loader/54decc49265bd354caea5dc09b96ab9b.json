{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/react_hello_world/src/Todo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst TodoForm = props => {\n  _s();\n\n  const [newTodo, setTodo] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: evevt => {\n      event.preventDefault();\n      props.addTodo(newTodo);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: event => {\n        setNewTodo(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoForm, \"fJ+O1VSSsQZXCWZV2yxh2B7PthI=\");\n\n_c = TodoForm;\n\nconst TodoList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = TodoList;\n\nconst Todo = props => {\n  _s2();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    const newTodos = [...todo, todo];\n    setTodo(newTodos); // make a copy of todoList, you could use let copy = [...todoList], or any other method\n    // push todo into the copy\n    // call setTodoList with the copy\n\n    console.log(todos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Todo, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n\n_c3 = Todo;\nexport default Todo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TodoForm\");\n$RefreshReg$(_c2, \"TodoList\");\n$RefreshReg$(_c3, \"Todo\");","map":{"version":3,"sources":["/root/react_hello_world/src/Todo.js"],"names":["React","useState","TodoForm","props","newTodo","setTodo","evevt","event","preventDefault","addTodo","setNewTodo","target","value","TodoList","Todo","todos","setTodos","todo","newTodos","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAK,CAACC,OAAD,EAASC,OAAT,IAAkBJ,QAAQ,CAAC,EAAD,CAA/B;AACA,sBACA;AAAM,IAAA,SAAS,EAAC,WAAhB;AACC,IAAA,QAAQ,EAAEK,KAAK,IAAG;AACjBC,MAAAA,KAAK,CAACC,cAAN;AACAL,MAAAA,KAAK,CAACM,OAAN,CAAcL,OAAd;AAAuB,KAHzB;AAAA,4BAKA;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAEA,OAFP;AAEgB,MAAA,QAAQ,EAAEG,KAAK,IAAE;AAACG,QAAAA,UAAU,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAV;AAA+B;AAFjE;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYD,CAdD;;GAAMV,Q;;KAAAA,Q;;AAgBN,MAAMW,QAAQ,GAAIV,KAAD,IAAW;AAC1B,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMU,Q;;AAIN,MAAMC,IAAI,GAAIX,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAiBf,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMQ,OAAO,GAAGQ,IAAI,IAAI;AACtB,UAAMC,QAAQ,GAAC,CAAC,GAAGD,IAAJ,EAASA,IAAT,CAAf;AACAZ,IAAAA,OAAO,CAACa,QAAD,CAAP,CAFsB,CAItB;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GARD;;AAWA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACL,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,QAAD;AAAW,MAAA,KAAK;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CAjBD;;IAAMK,I;;MAAAA,I;AAmBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TodoForm = (props) => {\n  const[newTodo,setTodo]=useState(\"\")\n  return (\n  <form className=\"todo-form\"\n   onSubmit={evevt=> {\n    event.preventDefault();\n    props.addTodo(newTodo)}\n   }>\n  <input\n  type=\"text\" \n  value={newTodo} onChange={event=>{setNewTodo(event.target.value)}} ></input>\n  <button>Submit todo</button>\n  </form>\n  )\n}\n\nconst TodoList = (props) => {\n  return <div className=\"todo-list\" />\n}\n\nconst Todo = (props) => {\n  const [todos,setTodos]=useState([])\n  const addTodo = todo => {\n    const newTodos=[...todo,todo]\n    setTodo(newTodos)\n\n    // make a copy of todoList, you could use let copy = [...todoList], or any other method\n    // push todo into the copy\n    // call setTodoList with the copy\n    console.log(todos)\n  }\n\n\n  return <div className=\"todo\">\n    <TodoForm addTodo={addTodo} />\n    <TodoList  todos/>\n  </div>\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}